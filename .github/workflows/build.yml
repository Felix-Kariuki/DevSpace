name: Build

on:
  push:
    branches: [ main ]

jobs:

  build:
    name: 🔨 Build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2


      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      # Allow permissions to make gradle executable - This can removed by adding the gradlew file permission
      # directly into the repository using `git update-index --chmod=+x gradlew`
       - name: Make gradle executable
        run: chmod +x ./gradlew


      - name: Build with gradle
        run: ./gradlew build --stacktrace

  lint-check:
    name: 🔍 Lint
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint check
        run: ./gradlew lint

      - name: Generate lint report
        uses: actions/upload-artifact@v2
        with:
          name: lint_report.html
          path: app/build/reports/lint-results-debug.html

  unit-tests:
    name: 🧪 Unit Tests
    needs: [ lint-check ]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Execute unit tests
        run: ./gradlew test --stacktrace

      - name: Generate test report
        uses: actions/upload-artifact@v2
        with:
          name: unit_tests_report.html
          path: app/build/reports/tests/testDebugUnitTest/




#  generate-apk:
#    name: ⚙️Generate APK
#    needs: [build, lint-check, unit-tests]
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: '11'
#
#      - name: Build debug apk
#        run: ./gradlew assembleDebug --stacktrace
#
#      - name: Upload debug apk
#        uses: actions/upload-artifact@v1
#        with:
#          name: Android-CI-CD
#          path: app/build/outputs/apk/debug/app-debug.apk

#  create-release:
#    name: 🎉 Create Release
#    needs: [ generate-apk ]
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Download APK from build
#        uses: actions/download-artifact@v1
#        with:
#          name: Android-CI-CD
#
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#
#      - name: Upload Release APK
#        id: upload_release_asset
#        uses: actions/upload-release-asset@v1.0.1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: Android-CI-CD/app-debug.apk
#          asset_name: Android-CI-CD.apk
#          asset_content_type: application/zip

